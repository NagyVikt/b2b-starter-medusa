version: "3.8"

services:
  # Redis
  redis:
    image: redis:7-alpine
    container_name: medusa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - medusa_network
      - coolify

  # Medusa Backend
  medusa:
    build: .
    container_name: medusa_backend
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://tehergumiadmin:rdvl53oxgoGEWXx4AO03npRxBTfPHBpjAlyGrLzWuhGHbPaZYsFnfmPlDN5c0iJC@yg4wso8o884cggwgccww4ocw:5432/tehergumi
      REDIS_URL: redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - .:/server
      - /server/node_modules
    networks:
      - medusa_network
      - coolify

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"

      # Medusa backend service (port 9000 inside container)
      - "traefik.http.services.medusa.loadbalancer.server.port=9000"

      # Router for admin.teherguminet.hu
      - "traefik.http.routers.medusa-https.rule=Host(`admin.teherguminet.hu`)"
      - "traefik.http.routers.medusa-https.entrypoints=https"
      - "traefik.http.routers.medusa-https.tls=true"
      - "traefik.http.routers.medusa-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.medusa-https.service=medusa"
      - "traefik.http.routers.medusa-https.priority=10"

      # Middleware: strip /app
      - "traefik.http.middlewares.strip-app.stripprefix.prefixes=/app"
      - "traefik.http.routers.medusa-https.middlewares=strip-app"

volumes:
  postgres_data:

networks:
  medusa_network:
    driver: bridge
  coolify:
    external: true
