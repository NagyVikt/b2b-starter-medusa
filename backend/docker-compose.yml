version: "3.8"

services:
  postgres:
    image: postgres:17-alpine
    container_name: medusa_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tehergumi}
      POSTGRES_USER: ${POSTGRES_USER:-tehergumiadmin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me_now}
    # REMOVE the ports block to avoid 5432 conflicts with host Postgres
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks: [medusa_network, coolify]
  redis:
    image: redis:7-alpine
    container_name: medusa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - medusa_network
      - coolify

  medusa:
    build: .
    container_name: medusa_backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: development
      # Disable SSL for local Postgres (pick ONE of the two lines below)
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-store?ssl_mode=require
      PGSSLMODE: disable
      REDIS_URL: redis://redis:6379/0
      # (Alternative) DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-store?sslmode=disable

      # Redis

      # Expose an admin backend URL for admin UI (used by medusa-config.ts)
      MEDUSA_ADMIN_BACKEND_URL: https://admin.teherguminet.hu
    env_file:
      - .env
    volumes:
      - .:/server
      - /server/node_modules
    networks:
      - medusa_network
      - coolify

    # Traefik (Coolify) â€” routes https://admin.teherguminet.hu to the Medusa container (port 9000)
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=coolify"

      - "traefik.http.services.medusa.loadbalancer.server.port=9000"

      - "traefik.http.routers.medusa-https.rule=Host(`admin.teherguminet.hu`)"
      - "traefik.http.routers.medusa-https.entrypoints=https"
      - "traefik.http.routers.medusa-https.tls=true"
      - "traefik.http.routers.medusa-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.medusa-https.service=medusa"
      - "traefik.http.routers.medusa-https.priority=10"

volumes:
  postgres_data:

networks:
  medusa_network:
    driver: bridge
  coolify:
    external: true
